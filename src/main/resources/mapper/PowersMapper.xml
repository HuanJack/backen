<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xl.backen.dao.PowersMapper">
  <resultMap id="BaseResultMap" type="com.xl.backen.entity.Powers">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="meun_name" jdbcType="VARCHAR" property="meunName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="up_menus_id" jdbcType="VARCHAR" property="upMenusId"/>
    <result column="up_menus_name" jdbcType="VARCHAR" property="upMenusName"/>
  </resultMap>
  <sql id="Base_Column_List">
    uuid, code, meun_name, description, create_time, update_time
  </sql>

  <!--根据角色id查找对应的菜单-->
  <select id="queryByRoleId" resultMap="BaseResultMap">
    select p.*
    from tb_roles_power rp right join tb_powers p on p.uuid = rp.power_id
    where rp.role_id=#{roleId} and rp.status=1
  </select>

  <select id="queryAll" resultMap="BaseResultMap">
  	select p.*,pm.name as up_menus_name
  	from tb_powers p left join  tb_parent_menus pm on pm.uuid = p.up_menus_id
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_powers
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_powers
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xl.backen.entity.Powers">
    insert into tb_powers (uuid, code, meun_name, 
      description, create_time, update_time
      )
    values (#{uuid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{meunName,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xl.backen.entity.Powers">
    insert into tb_powers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="meunName != null">
        meun_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="meunName != null">
        #{meunName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xl.backen.entity.Powers">
    update tb_powers
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="meunName != null">
        meun_name = #{meunName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xl.backen.entity.Powers">
    update tb_powers
    set code = #{code,jdbcType=VARCHAR},
      meun_name = #{meunName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>