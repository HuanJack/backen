<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xl.backen.dao.UsersRoleMapper">
  <resultMap id="BaseResultMap" type="com.xl.backen.entity.UsersRole">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="status" jdbcType="INTEGER" property="status"/>
  </resultMap>
  <sql id="Base_Column_List">
    uuid, user_id, role_id
  </sql>
  <!-- 根据roleid,userid找到对象 -->
  <select id="findByRoleAndUser" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  	from tb_users_role
  	where user_id=#{userId} and role_id=#{roleId}
  </select>
  
  <!--根据userId找到List对象  -->
  <select id="queryByUserId" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  	from tb_users_role
  	where user_id=#{userId}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_users_role
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_users_role
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xl.backen.entity.UsersRole">
    insert into tb_users_role (uuid, user_id, role_id
      )
    values (#{uuid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xl.backen.entity.UsersRole">
    insert into tb_users_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
       <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xl.backen.entity.UsersRole">
    update tb_users_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xl.backen.entity.UsersRole">
    update tb_users_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>